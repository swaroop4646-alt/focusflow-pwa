const CACHE = 'focusflow-cache-v5';
const ASSETS = ['./', './index.html', './styles.css', './app.js', './manifest.json', './icons/icon-192.png', './icons/icon-512.png', './privacy.html', './terms.html'];
self.addEventListener('install', evt => { self.skipWaiting(); evt.waitUntil(caches.open(CACHE).then(cache => cache.addAll(ASSETS))); });
self.addEventListener('activate', evt => { evt.waitUntil(caches.keys().then(keys => Promise.all(keys.filter(k=>k!==CACHE).map(k=>caches.delete(k)))).then(()=>self.clients.claim())); });
self.addEventListener('fetch', evt => { const req = evt.request; const url = new URL(req.url); if (url.origin === location.origin) { evt.respondWith(caches.match(req).then(cached => cached || fetch(req))); return; } evt.respondWith(fetch(req).then(res => { const clone = res.clone(); caches.open(CACHE).then(c => c.put(req, clone)); return res; }).catch(() => caches.match(req))); });